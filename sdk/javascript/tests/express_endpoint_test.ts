import fetch from 'node-fetch';
import {endpoint} from '../src/express_endpoint';

test('integration test', async () => {
  const privateKey = '0x177ee777e72b8c042e05ef41d1db0f17f1fcb0e8150b37cfad6993e4373bdf10';
  const timestamp = 1563606000;

  async function fetchPrices(): Promise<[number, object]> {
    return [timestamp, {'eth': 260.0, 'zrx': 0.58}];
  }

  const port = 10123;
  const app = endpoint(privateKey, fetchPrices).listen(port);

  const response1 = await fetch(`http://localhost:${port}/prices.json`);
  expect(response1.ok).toBe(true);
  expect(await response1.json()).toEqual({
    message: "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000005d32bbf000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000670726963657300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000f7f49000000000000000000000000000000000000000000000000000000000000000003455448000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000008d9a000000000000000000000000000000000000000000000000000000000000000035a52580000000000000000000000000000000000000000000000000000000000",
    prices: {
      eth: 260,
      zrx: 0.58,
    },
    timestamp: timestamp,
    signature: "0x5a8ac15b06f91215ff646b5f3ae8983c116fd5885386647bd1e94682fadf55da6ef0c378824941e02bb96038a83f997f66b4d8f82938da9d17c425d9fc914a96000000000000000000000000000000000000000000000000000000000000001b"
  });

  const response2 = await fetch(`http://localhost:${port}/prices.json?symbols=eth,zrx`);
  expect(response2.ok).toBe(true);
  expect(await response2.json()).toEqual({
    message: "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000005d32bbf000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000670726963657300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000004000000000000000000000000000000000000000000000000000000000000000e000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000f7f49000000000000000000000000000000000000000000000000000000000000000003455448000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000008d9a000000000000000000000000000000000000000000000000000000000000000035a52580000000000000000000000000000000000000000000000000000000000",
    prices: {
      eth: 260,
      zrx: 0.58
    },
    timestamp: timestamp,
    signature: "0x5a8ac15b06f91215ff646b5f3ae8983c116fd5885386647bd1e94682fadf55da6ef0c378824941e02bb96038a83f997f66b4d8f82938da9d17c425d9fc914a96000000000000000000000000000000000000000000000000000000000000001b"
  });

  const response3 = await fetch(`http://localhost:${port}/prices.json?symbols=etH`);
  expect(response3.ok).toBe(true);
  expect(await response3.json()).toEqual({
    message: "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000005d32bbf000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000670726963657300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000f7f490000000000000000000000000000000000000000000000000000000000000000034554480000000000000000000000000000000000000000000000000000000000",
    prices: {
      eth: 260
    },
    timestamp: timestamp,
    signature: "0x7e760519bd134a1b34ecf5cd6154e3771fa8913d063a7d0ead6514fdfaf511c74b1c9614fff1e30b93a25e1cf1f8487d7871fa2c77f857f636e3a40ffe1ccaa8000000000000000000000000000000000000000000000000000000000000001b"
  });

  const response4 = await fetch(`http://localhost:${port}/prices.json?symbols=ZRX`);
  expect(response4.ok).toBe(true);
  expect(await response4.json()).toEqual({
    message: "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000005d32bbf000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000670726963657300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000000000000002000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000040000000000000000000000000000000000000000000000000000000000008d9a000000000000000000000000000000000000000000000000000000000000000035a52580000000000000000000000000000000000000000000000000000000000",
    prices: {
      zrx: 0.58
    },
    timestamp: timestamp,
    signature: "0x4032193ef67359d4d9c6366d9009452599e9a2967cdfacf1ec4dd47d142ec6dd2dcdfcf0043b38d9225762c5821f86249bdc38dbb18d8757580fe23fadd39c22000000000000000000000000000000000000000000000000000000000000001b"
  });

  const response5 = await fetch(`http://localhost:${port}/prices.json?symbols=bat`);
  expect(response5.ok).toBe(true);
  expect(await response5.json()).toEqual({
    message: "0x0000000000000000000000000000000000000000000000000000000000000060000000000000000000000000000000000000000000000000000000005d32bbf000000000000000000000000000000000000000000000000000000000000000a0000000000000000000000000000000000000000000000000000000000000000670726963657300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    prices: {},
    timestamp: timestamp,
    signature: "0x8c86bfa918c0767fbd2d2925ba22cc446aa837e049e4c3665bb2dbbbe23b3e3c6674f2866dd810f700950915c16fd8f0327dd8b27cc90898ccdf99938f08145d000000000000000000000000000000000000000000000000000000000000001c"
  });
});
